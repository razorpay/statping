name: CI
on: [push]
jobs:
  cancel:
    runs-on: [ubuntu-latest]
    name: Cancel Previous Runs
    if: always()
    steps:
      - uses: styfle/cancel-workflow-action@d57d93c3a8110b00c3a2c0b64b8516013c9fd4c9
        if: github.ref != 'refs/heads/master'
        name: cancel old workflows
        id: cancel
        with:
          access_token: ${{ github.token }}
      - if: github.ref == 'refs/heads/master'
        name: Don't cancel old workflows
        id: dont_cancel
        run: |
          echo "Don't cancel old workflow"

  build-statping-docker-image:
    name: Docker image - statping
    runs-on: [ubuntu-latest]
    steps:
      - name: checkout
        id: checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.PUBLIC_DOCKER_USERNAME }}
          password: ${{ secrets.PUBLIC_DOCKER_PASSWORD }}
      - name: build statping base_image
        uses: docker/build-push-action@v2
        with:
          tags: razorpay/statping:base_${{ github.sha }}
          push: true
          file: ./Dockerfile.base
          build-args: GIT_COMMIT_HASH=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
        env:
          GIT_COMMIT_HASH: ${{ github.sha }}
          APP_ENV: dev_docker
          EXEC_MODE: test
      - name: build statping image
        uses: docker/build-push-action@v2
        with:
          tags: razorpay/statping:service_${{ github.sha }}
          push: true
          file: ./Dockerfile
          build-args: |
            GIT_COMMIT_HASH=${{ github.sha }}
            GIT_TOKEN=${{ secrets.GIT_TOKEN }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
        env:
          GIT_COMMIT_HASH: ${{ github.sha }}
          APP_ENV: dev_docker
          EXEC_MODE: test

  fmt:
    name: fmt
    runs-on: [ubuntu-latest]
    continue-on-error: false
    steps:
      - name: checkout
        id: checkout
        uses: actions/checkout@v2
      - name: format
        uses: docker://golang:1.13-alpine3.10
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          entrypoint: /bin/sh
          args: ./scripts/run_tests.sh fmt drone

  workflow_status:
    runs-on: [ubuntu-latest]
    name: Update Status Check
    needs: [build-statping-docker-image]
    if: always()
    steps:
      - name: Failed
        id: failed
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo 'Failing the workflow for github status check.'
          curl -X POST -H "Content-Type: application/json" -H "Authorization: token ${{ github.token }}" \
          -d '{ "state" : "failure" , "context" : "github/combined-status-check" , "description" : "github/combined-status-check", "target_url" : "https://github.com/${{ github.repository }}" }' \
          https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}
          exit 1
      - name: Success
        if: steps.failed.conclusion == 'skipped'
        run: |
          echo 'Status check has passed!'
          curl -X POST -H "Content-Type: application/json" -H "Authorization: token ${{ github.token }}" \
          -d '{ "state" : "success" , "context" : "github/combined-status-check" , "description" : "github/combined-status-check", "target_url" : "https://github.com/${{ github.repository }}" }' \
          https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}
          exit 0
